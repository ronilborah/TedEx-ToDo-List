"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/view/page",{

/***/ "(app-pages-browser)/./hooks/useTasksAPI.ts":
/*!******************************!*\
  !*** ./hooks/useTasksAPI.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTasks: () => (/* binding */ useTasks)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n// ========================================\n// API INTEGRATION - ENABLED\n// ========================================\n// This file provides backend API integration for task persistence\n// Tasks are now stored in MongoDB instead of localStorage\n\nconst TASKS_KEY = \"taskManagerTasks\";\nfunction loadTasksFromStorage() {\n    try {\n        const data = localStorage.getItem(TASKS_KEY);\n        if (!data) return [];\n        const parsed = JSON.parse(data);\n        return parsed.map((task)=>({\n                ...task,\n                createdAt: new Date(task.createdAt),\n                dueDate: task.dueDate ? new Date(task.dueDate) : undefined\n            }));\n    } catch (e) {\n        return [];\n    }\n}\nfunction saveTasksToStorage(tasks) {\n    localStorage.setItem(TASKS_KEY, JSON.stringify(tasks));\n}\nfunction useTasks() {\n    const [tasks, setTasks] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useTasks.useEffect\": ()=>{\n            setLoading(true);\n            try {\n                setTasks(loadTasksFromStorage());\n                setError(null);\n            } catch (err) {\n                setError(\"Failed to load tasks\");\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"useTasks.useEffect\"], []);\n    const save = (newTasks)=>{\n        setTasks(newTasks);\n        saveTasksToStorage(newTasks);\n    };\n    const addTask = (taskData)=>{\n        const newTask = {\n            ...taskData,\n            id: Math.random().toString(36).slice(2),\n            createdAt: new Date(),\n            completed: false\n        };\n        save([\n            newTask,\n            ...tasks\n        ]);\n        return newTask.id;\n    };\n    const updateTask = (id, taskData)=>{\n        save(tasks.map((task)=>task.id === id ? {\n                ...task,\n                ...taskData\n            } : task));\n    };\n    const toggleComplete = (id)=>{\n        save(tasks.map((task)=>task.id === id ? {\n                ...task,\n                completed: !task.completed\n            } : task));\n    };\n    const deleteTask = (id)=>{\n        save(tasks.filter((task)=>task.id !== id));\n    };\n    const getTask = (id)=>tasks.find((task)=>task.id === id);\n    const getStats = ()=>{\n        const total = tasks.length;\n        const completed = tasks.filter((t)=>t.completed).length;\n        const pending = tasks.filter((t)=>!t.completed && t.status !== \"Done\").length;\n        const overdue = tasks.filter((t)=>!t.completed && t.dueDate && t.dueDate < new Date()).length;\n        const completionRate = total ? completed / total : 0;\n        return {\n            total,\n            completed,\n            pending,\n            overdue,\n            completionRate\n        };\n    };\n    return {\n        tasks,\n        loading,\n        error,\n        addTask,\n        updateTask,\n        toggleComplete,\n        deleteTask,\n        getTask,\n        getStats,\n        refreshTasks: ()=>setTasks(loadTasksFromStorage())\n    };\n} // ========================================\n // MIGRATION INSTRUCTIONS\n // ========================================\n // To migrate from localStorage to API:\n // 1. Uncomment the code above\n // 2. Replace the existing useTasks hook in your components:\n //    - In app/tasks/page.tsx: Replace useTasks() with useTasksAPI()\n //    - In app/add/page.tsx: Replace useTasks() with useTasksAPI()\n //    - In app/edit/[id]/page.tsx: Replace useTasks() with useTasksAPI()\n // 3. Update environment variables:\n //    - Add NEXT_PUBLIC_API_URL=http://localhost:6900/api to your .env file\n // 4. Handle loading states:\n //    - The API version includes loading and error states\n //    - Add loading spinners and error messages to your UI\n // 5. Test the integration:\n //    - Start both frontend and backend: npm run dev (from root)\n //    - Verify tasks are saved to MongoDB instead of localStorage\n // ========================================\n // EXAMPLE USAGE\n // ========================================\n /*\nfunction TasksPage() {\n  const { \n    tasks, \n    loading, \n    error, \n    addTask, \n    updateTask, \n    toggleComplete, \n    deleteTask \n  } = useTasksAPI()\n\n  if (loading) return <div>Loading tasks...</div>\n  if (error) return <div>Error: {error}</div>\n\n  return (\n    <div>\n      {tasks.map(task => (\n        <TaskCard\n          key={task.id}\n          task={task}\n          onToggleComplete={toggleComplete}\n          onEdit={(id) => router.push(`/edit/${id}`)}\n          onDelete={deleteTask}\n        />\n      ))}\n    </div>\n  )\n}\n*/ \n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useTasksAPI.ts\n"));

/***/ })

});